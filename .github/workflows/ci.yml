name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

      web:
        build:
          context: .
          dockerfile: Dockerfile
        ports:
          - "8000:8000"
        env:
          DATABASE_TYPE: postgres
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          REDIS_URL: "redis://redis:6379/0"
          GOOGLE_SHEETS_AUTH: ${{ secrets.GOOGLE_SHEETS_AUTH }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
        options: --entrypoint sh

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run linting
        run: |
          source .venv/bin/activate
          flake8 .

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          coverage run --source='.' manage.py test
          coverage report

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.xml